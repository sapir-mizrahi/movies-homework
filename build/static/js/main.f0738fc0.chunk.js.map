{"version":3,"sources":["redux/actions.js","components/movieItem.js","components/MovieModal.js","components/moviesList.js","redux/middlewares/crud.js","redux/reducers/movies.js","redux/reducers/reducerUtils.js","redux/store.js","App.js","index.js"],"names":["actions","Proxy","get","target","prop","undefined","args","type","actionName","replace","toUpperCase","payload","MovieItem","props","movie","setModalShow","setCurrentMovieToModal","Card","style","width","Img","variant","src","Poster","Body","Title","Text","Plot","imdbRating","Button","onClick","showCurrentMovieInModal","MovieModal","modalShow","currentMovieToModal","Modal","size","centered","show","Header","id","className","Writer","Language","Year","Country","Footer","connect","state","moviesToView","moviesReducer","dispatch","getTop10Movies","showOrHide","currentMovie","setSearchMovie","value","searchMovie","searchInput","useRef","useState","validateSearch","setValidateSearch","useEffect","Container","Row","Col","xs","Form","Control","ref","valueSearchInput","current","Array","isArray","map","key","url","user","action","setMoviesToView","produce","handlers","handler","toLowerCase","v","createReducer","reducer","combineReducers","store","createStore","applyMiddleware","next","fetch","then","response","json","data","search","Search","window","App","path","component","MoviesList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0738fc0.chunk.js","sourcesContent":["function convertActionNameToType(actionName) {\r\n    return actionName.replace(/([A-Z])/g, \"_$1\").toUpperCase()\r\n}\r\n\r\nexport const actions = new Proxy(\r\n\r\n    {}, {\r\n\r\n        get: function(target, prop) {\r\n            if (target[prop] === undefined) {\r\n                return function(args) {\r\n                    return {\r\n                        type: convertActionNameToType(prop),\r\n                        payload: args\r\n                    };\r\n\r\n                }\r\n\r\n            } else return target[prop];\r\n        }\r\n\r\n    }\r\n)","import { Card, Button } from 'react-bootstrap'\r\n\r\n\r\nfunction MovieItem(props) {\r\n  const { movie, setModalShow, setCurrentMovieToModal } = props;\r\n\r\n  const showCurrentMovieInModal = (movie) =>{\r\n    setModalShow(true);\r\n    setCurrentMovieToModal(movie);\r\n  }\r\n  if (movie)\r\n    return (\r\n        <Card style={{ width: '18rem' }}>\r\n          <Card.Img variant=\"top\" src={movie.Poster} />\r\n          <Card.Body>\r\n            <Card.Title>{movie.Title}</Card.Title>\r\n            <Card.Text>\r\n              {movie.Plot}\r\n            </Card.Text>\r\n            <Card.Text>\r\n              {movie.imdbRating}\r\n            </Card.Text>\r\n            <Button variant=\"secondary\" onClick={()=>showCurrentMovieInModal(movie)}>Show in modal</Button>\r\n          </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\nexport default MovieItem;\r\n\r\n\r\n","import { Button, Modal } from \"react-bootstrap\";\r\nimport './style.css'\r\n\r\n\r\nfunction MovieModal(props) {\r\n  const { modalShow, setModalShow, currentMovieToModal } = props;\r\n  return (\r\n    <>\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={modalShow}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            {currentMovieToModal.Title}<br />\r\n            <img className=\"img-modal\" src={currentMovieToModal.Poster} />\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Writer: {currentMovieToModal.Writer}</h4>\r\n          <p>\r\n            {currentMovieToModal.Plot && <div><p className=\"p-modal\">Plot:</p> {currentMovieToModal.Plot}</div>}\r\n            {currentMovieToModal.Language && <div><p className=\"p-modal\">Language:</p> {currentMovieToModal.Language}</div>}\r\n            {currentMovieToModal.Year && <div><p className=\"p-modal\">Year:</p> {currentMovieToModal.Year}</div>}\r\n            {currentMovieToModal.Country && <div><p className=\"p-modal\">Country: </p>{currentMovieToModal.Country}</div>}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={setModalShow}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieModal;\r\n","import { Container, Button, Col, Row, Form } from \"react-bootstrap\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"../redux/actions\";\r\nimport MovieItem from \"./movieItem\";\r\nimport MovieModal from \"./MovieModal\";\r\nimport './style.css'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  moviesToView: state.moviesReducer.moviesToView,\r\n  modalShow: state.moviesReducer.modalShow,\r\n  currentMovieToModal: state.moviesReducer.currentMovieToModal\r\n})\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getTop10Movies: () => dispatch(actions.getTop10Movies()),\r\n    setModalShow: (showOrHide) => dispatch(actions.setModalShow(showOrHide)),\r\n    setCurrentMovieToModal: (currentMovie) => dispatch(actions.setCurrentMovieToModal(currentMovie)),\r\n    setSearchMovie: (value) => dispatch(actions.searchMovie(value))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function MoviesList(props) {\r\n  const { moviesToView, getTop10Movies, setModalShow, modalShow, setCurrentMovieToModal, setSearchMovie, currentMovieToModal } = props;\r\n  const searchInput = useRef('');\r\n  const [validateSearch, setValidateSearch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getTop10Movies();\r\n  }, []);\r\n  const searchMovie = () => {\r\n    let valueSearchInput = searchInput.current.value\r\n    if (valueSearchInput !== '') {\r\n      setValidateSearch(false)\r\n      setSearchMovie(valueSearchInput);\r\n    } else {\r\n      setValidateSearch(true)\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <h2 className=\"my-5 header-movies\">Top 10 Movies</h2>\r\n      <Row className=\"search-movies\">\r\n        <Col xs='3'>\r\n          <Form.Control\r\n            type=\"text\"\r\n            id=\"inputSearch\"\r\n            aria-describedby=\"passwordHelpBlock\"\r\n            ref={searchInput}\r\n          />\r\n        </Col>\r\n        <Col xs='2'><Button variant=\"secondary\" onClick={() => searchMovie()}>Search</Button>{' '}</Col>\r\n      </Row>\r\n      <br/>\r\n\r\n      {validateSearch && <p className=\"validation-input\">Please enter a search word</p>}\r\n\r\n      <Row>\r\n        {Array.isArray(moviesToView) && moviesToView?.map((movie, key) => {\r\n          return (\r\n            <Col>\r\n              <MovieItem\r\n                movie={movie}\r\n                key={key}\r\n                setModalShow={(showOrHide) => setModalShow(showOrHide)}\r\n                setCurrentMovieToModal={(currentMovie) => setCurrentMovieToModal(currentMovie)}\r\n              />\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n      <MovieModal\r\n        modalShow={modalShow}\r\n        setModalShow={() => setModalShow()}\r\n        currentMovieToModal={currentMovieToModal}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n)\r\n","import { actions } from \"../actions\";\r\n\r\nconst url = \"http://localhost:4000/api\";\r\n\r\nexport const getTop10Movies =\r\n  ({ dispatch }) =>\r\n    (next) =>\r\n      (action) => {\r\n        if (action.type === \"GET_TOP10_MOVIES\") {\r\n          return fetch(`${url}/movies/getTop10Movies`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              dispatch(actions.setMoviesToView(data.data));\r\n            });\r\n        }\r\n        return next(action);\r\n      };\r\n\r\n\r\nexport const searchMovie =\r\n  ({ dispatch }) =>\r\n    (next) =>\r\n      (action) => {\r\n        if (action.type === \"SEARCH_MOVIE\") {\r\n          let search = action.payload;\r\n          return fetch(`${url}/movies/searchMovie/${search}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              dispatch(actions.setMoviesToView(data.data.Search));\r\n            });\r\n        }\r\n        return next(action);\r\n      };\r\n","import produce from \"immer\";\r\nimport createReducer from \"./reducerUtils\";\r\n\r\nconst initalStaste = {\r\n  currentMovieToModal: {},\r\n  moviesToView: [],\r\n  modalShow: false\r\n};\r\n\r\nconst user = {\r\n  setCurrentMovieToModal(state, action) {\r\n    state.currentMovieToModal = action.payload;\r\n  },\r\n\r\n  setMoviesToView(state, action) {\r\n    debugger\r\n    state.moviesToView = action.payload;\r\n  },\r\n  setModalShow(state, action) {\r\n    state.modalShow = action.payload;\r\n  },\r\n};\r\n\r\nexport default produce(\r\n  (state, action) => createReducer(state, action, user),\r\n  initalStaste\r\n);\r\n","function convertActionToName(actionType) {\r\n    return actionType.toLowerCase().replace(/_(\\w)/g, v => v[1].toUpperCase());\r\n}\r\n\r\nexport default function createReducer(state, action, handlers) {\r\n    const key = convertActionToName(action.type);\r\n    const handler = handlers[key]\r\n    if (handler)\r\n        handler(state, action);\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { getTop10Movies, searchMovie } from './middlewares/crud';\r\nimport moviesReducer from './reducers/movies';\r\n\r\nconst reducer = combineReducers({ moviesReducer });\r\n\r\nconst store = createStore(reducer, applyMiddleware( getTop10Movies, searchMovie));\r\nwindow.store = store\r\n\r\nexport default store;","import \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport MoviesList from \"./components/moviesList\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from './redux/store'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" component={MoviesList} />\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}